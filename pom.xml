<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>trebor.org</groupId>
  <artifactId>trebor</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>

  <properties>
    <openrdf-version>2.6.3</openrdf-version>
    <alibaba-version>2.0-beta14</alibaba-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jersey.version>1.7</jersey.version>
  </properties>

  <profiles>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <tomcat-server>local</tomcat-server>
        <tomcat-url>http://localhost:8080/manager/text</tomcat-url>
        <tomcat-service-name>/</tomcat-service-name>
      </properties>
    </profile>
    <profile>
      <id>remote</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <tomcat-server>trebor-ec2</tomcat-server>
        <tomcat-url>http://ec2-50-18-8-157.us-west-1.compute.amazonaws.com:80/manager/text</tomcat-url>
        <tomcat-service-name>/</tomcat-service-name>
      </properties>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>maven2-repository.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>maven-repository.java.net</id>
      <name>Java.net Maven 1 Repository (legacy)</name>
      <url>http://download.java.net/maven/1</url>
    </repository>
    <repository>
      <id>aduna-repo</id>
      <url>http://repo.aduna-software.org/maven2/releases</url>
    </repository>
    <repository>
      <id>info-bliki-repository</id>
      <url>http://gwtwiki.googlecode.com/svn/maven-repository/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>apache.snapshots</id>
      <name>Apache Snapshots</name>
      <url>http://people.apache.org/repo/m2-snapshot-repository</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
  
    <!-- bliki markup -->
    
    <dependency>
      <groupId>info.bliki.wiki</groupId>
      <artifactId>bliki-core</artifactId>
      <version>3.0.16</version>
    </dependency>
    
    <!-- openrdf -->

    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-http</artifactId>
      <version>${openrdf-version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-api</artifactId>
      <version>${openrdf-version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-repository-dataset</artifactId>
      <version>${openrdf-version}</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-queryparser-sparql</artifactId>
      <version>${openrdf-version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-sail-memory</artifactId>
      <version>${openrdf-version}</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-turtle</artifactId>
      <version>${openrdf-version}</version>
    </dependency>
    <dependency>
      <groupId>org.openrdf.sesame</groupId>
      <artifactId>sesame-rio-rdfxml</artifactId>
      <version>${openrdf-version}</version>
    </dependency>

    <!-- jersey -->

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>${jersey.version}</version>
    </dependency>

    <!-- misc utilites -->

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.16</version>
    </dependency>
    <dependency>
      <groupId>org.mod4j.org.apache.commons</groupId>
      <artifactId>logging</artifactId>
      <version>1.0.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.7</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>3.2.0</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- not fully sure why provided works and test doesn't for this -->

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- testing -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.jersey-test-framework</groupId>
      <artifactId>jersey-test-framework-grizzly2</artifactId>
      <version>${jersey.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey.test</groupId>
      <artifactId>functional-tests</artifactId>
      <version>1.10</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>package</defaultGoal>
    <finalName>${project.artifactId}</finalName>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>tomcat-maven-plugin</artifactId>
          <configuration>
            <server>${tomcat-server}</server>
            <url>${tomcat-url}</url>
            <path>${tomcat-service-name}</path>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <preparationGoals>clean</preparationGoals>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.6</source>
            <target>1.6</target>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>